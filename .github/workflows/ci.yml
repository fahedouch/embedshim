name: CI
on:
  push:
    branches: [ unstable ]
  pull_request:
    branches: [ unstable ]
  workflow_dispatch:

jobs:
  #
  # Linter checker
  #
  linters:
    name: Linters
    runs-on: ubuntu-20.04
    timeout-minutes: 10

    strategy:
      matrix:
        go-version: [1.16.8]

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/github.com/fuweid/embedshim
          submodules: 'true'

      - name: set env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: install dependencies
        working-directory: src/github.com/fuweid/embedshim
        shell: bash
        run: |
          echo "::group:: install dependencies"
          echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main" | sudo tee -a /etc/apt/sources.list
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get update -y
          sudo apt-get install -y build-essential rsync binutils-dev elfutils libcap-dev libelf-dev libdw-dev python3-docutils
          sudo apt-get install -y g++ libelf-dev clang lld llvm
          echo "::endgroup::"

      - name: generate bpf binary
        working-directory: src/github.com/fuweid/embedshim
        shell: bash
        run: |
          echo "::group:: generate bpf binary"
          make -C bpf
          # TODO(fuweid): handle it in Makefile
          go generate ./...
          echo "::endgroup::"

      - name: golangci-lint check
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42.0
          args: --timeout=5m
          working-directory: src/github.com/fuweid/embedshim


  #
  # Project checker
  #
  # based on https://github.com/containerd/project-checks/blob/main/action.yml
  project:
    name: Project Checks
    runs-on: ubuntu-18.04
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v2
        with:
          path: src/github.com/fuweid/embedshim
          fetch-depth: 100

      - name: set env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "${{ github.workspace }}/bin" >> $GITHUB_PATH

      - name: install dependencies
        shell: bash
        env:
          # TODO(fuweid): remove the env GO111MODULE=off in new version of go
          GO111MODULE: off
        run: |
          echo "::group:: install dependencies"
          go get -u -v github.com/vbatts/git-validation
          go get -u -v github.com/kunalkushwaha/ltag
          echo "::endgroup::"

      - name: DCO checker
        shell: bash
        working-directory: src/github.com/fuweid/embedshim
        env:
          GITHUB_COMMIT_URL: ${{ github.event.pull_request.commits_url }}
          DCO_VERBOSITY: "-v"
          DCO_RANGE: ""
        run: |
          echo "::group:: DCO checks"
          set -eu -o pipefail
          if [ -z "${GITHUB_COMMIT_URL}" ]; then
          DCO_RANGE=$(jq -r '.after + "..HEAD"' ${GITHUB_EVENT_PATH})
          else
          DCO_RANGE=$(curl ${GITHUB_COMMIT_URL} | jq -r '.[0].parents[0].sha + "..HEAD"')
          fi
          range=
          [ ! -z "${DCO_RANGE}" ] && range="-range ${DCO_RANGE}"
          git-validation ${DCO_VERBOSITY} ${range} -run DCO,short-subject,dangling-whitespace
          echo "::endgroup::"
